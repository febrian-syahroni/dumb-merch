// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  roleId      Int
  token       String?
  createdAt   DateTime  @default(now())
  role        UserRole  @relation(fields: [roleId], references: [id])
  profile     Profile?
  cart        Cart?
  transactions Transaction[]
}

model UserRole {
  id     Int    @id @default(autoincrement())
  name   String
  users  User[]
}

model Profile {
  id        Int    @id @default(autoincrement())
  fullname  String
  phone     Int
  address   String
  genderId  Int
  userId    Int   @unique
  gender    Gender @relation(fields: [genderId], references: [id])
  user      User   @relation(fields: [userId], references: [id])
}

model Gender {
  id       Int       @id @default(autoincrement())
  name     String
  profiles Profile[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  products  Product[]
}

model Product {
  id               Int                @id @default(autoincrement())
  name             String
  description      String
  price            Int
  stock            Int
  categoryId       Int
  createdAt        DateTime           @default(now())
  category         Category           @relation(fields: [categoryId], references: [id])
  cartItems        CartItem[]
  transactionItems TransactionItem[]
}

model Cart {
  id         Int        @id @default(autoincrement())
  userId     Int        @unique
  createdAt  DateTime   @default(now())
  user       User       @relation(fields: [userId], references: [id])
  items      CartItem[]
}

model CartItem {
  id         Int       @id @default(autoincrement())
  cartId     Int
  productId  Int
  quantity   Int
  createdAt  DateTime  @default(now())
  cart       Cart      @relation(fields: [cartId], references: [id])
  product    Product   @relation(fields: [productId], references: [id])
}

model Transaction {
  id          Int               @id @default(autoincrement())
  userId      Int
  total       Int
  statusId    Int
  createdAt   DateTime          @default(now())
  user        User              @relation(fields: [userId], references: [id])
  status      TransactionStatus @relation(fields: [statusId], references: [id])
  items       TransactionItem[]
}

model TransactionStatus {
  id             Int              @id @default(autoincrement())
  name           String
  transactions   Transaction[]
}

model TransactionItem {
  id             Int               @id @default(autoincrement())
  transactionId  Int
  productId      Int
  quantity       Int
  subtotal       Int
  createdAt      DateTime          @default(now())
  transaction    Transaction       @relation(fields: [transactionId], references: [id])
  product        Product           @relation(fields: [productId], references: [id])
}
